# releans_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require_relative 'controller_test_base'

class SenderControllerTests < ControllerTestBase
  # Called only once for the class before any test has executed
  def self.startup
    self.controller = @@api_client.sender
  end

  # Return the details of the sender name.
  def test_sender_name_details()
    # Parameters for the API call
    id = 'sender-id'
    accept = '*/*'

    # Perform the API call through the SDK function
    result = self.class.controller.get_sender_name_details(id, accept)

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)
  end

  # Create a new sender id to send messages using it
  def test_create_sender_name()
    # Parameters for the API call
    accept = 'text/plain'
    content_type = 'text/plain'
    body = 'Your sender name'

    # Perform the API call through the SDK function
    result = self.class.controller.create_sender_name(accept, content_type, body)

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = nil

    assert(TestHelper.match_headers(expected_headers, @response_catcher.response.headers))

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('{"id":"ABCDEF"}', @response_catcher.response.raw_body)
  end

  # List all senders names associated with the account
  def test_get_all_senders()
    # Parameters for the API call
    accept = '*/*'

    # Perform the API call through the SDK function
    result = self.class.controller.get_all_senders(accept)

    # Test response code
    assert_equal(@response_catcher.response.status_code, 200)

    # Test whether the captured response is as we expected
    assert_not_nil(result)
    assert_equal('[{"id":"xEYgLPQZOpnel5aKBzyVXvAWJ","senderName":"RELEANS","phoneNumber":"+15105607102","status":1}]', @response_catcher.response.raw_body)
  end

end
